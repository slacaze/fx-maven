classdef WithSampleSandbox < fx.maven.test.WithCleanWorkingDirectory
    
    properties( GetAccess = protected, Constant )
        ArtifactId(1,:) char = 'sample'
        GroupId(1,:) char = 'fx.submission'
        ParentPackages(1,:) cell = {'fx', 'submission'}
    end
    
    properties( GetAccess = private, SetAccess = private )
        ReferenceToolboxPath(1,:) char
    end
    
    methods( TestClassSetup )
        
        function refreshReferenceSandbox( this )
            fixture = matlab.unittest.fixtures.TemporaryFolderFixture();
            this.applyFixture( fixture );
            this.ReferenceToolboxPath = fixture.Folder;
            undoCd = pwd;
            % Initialize
            mksandbox(...
                this.ArtifactId,...
                this.GroupId, ...
                this.ReferenceToolboxPath );
            packagePath = cellfun( @(str) sprintf( '+%s', str ), this.ParentPackages,...
                'UniformOutput', false );
            copyfile(...
                fullfile( maventestroot, 'Sample', 'giveMeTwice.m' ),...
                fullfile( this.ReferenceToolboxPath, 'code', this.ArtifactId, 'giveMeTwice.m' )...
                );
            copyfile(...
                fullfile( maventestroot, 'Sample', 'splitSpaces.m' ),...
                fullfile( this.ReferenceToolboxPath, 'code', this.ArtifactId, packagePath{:}, sprintf( '+%s', this.ArtifactId ), 'splitSpaces.m' )...
                );
            copyfile(...
                fullfile( maventestroot, 'Sample', 'tgiveMeTwice.m' ),...
                fullfile( this.ReferenceToolboxPath, 'test', packagePath{:}, sprintf( '+%s', this.ArtifactId ), '+test', 'tgiveMeTwice.m' )...
                );
            copyfile(...
                fullfile( maventestroot, 'Sample', 'tsplitSpaces.m' ),...
                fullfile( this.ReferenceToolboxPath, 'test', packagePath{:}, sprintf( '+%s', this.ArtifactId ), '+test', '+unittest', 'tsplitSpaces.m' )...
                );
            cd( undoCd );
        end
        
    end
    
    methods( TestMethodSetup )
        
        function createSandbox( this )
            copyfile( ...
                this.ReferenceToolboxPath, ...
                this.Root );
        end
        
    end
    
end